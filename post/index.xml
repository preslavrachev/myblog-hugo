<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Random Bits of Wisdom</title>
        <link>https://preslav.me/post/</link>
        <description>Recent content in Posts on Random Bits of Wisdom</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 14 Dec 2019 22:00:00 +0000</lastBuildDate>
        <atom:link href="https://preslav.me/post/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Panic Without Worry</title>
            <link>https://preslav.me/2019/12/14/panic-without-worry/</link>
            <pubDate>Sat, 14 Dec 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/12/14/panic-without-worry/</guid>
            <description>In the Go community, there is some kind of paranoia around panicking, as if it’s the worst thing that can happen to your application. In fact, it often is the better option. Think about Go programs as CLI applications. Would you rather crash right away and let the user react, or hang, trying to recover? The same applies to applications running as services. Modern tooling makes it easy to automatically restart a crashing service within seconds.</description>
            <content type="html"><![CDATA[<p>In the Go community, there is some kind of paranoia around panicking, as if it’s the worst thing that can happen to your application. In fact, it often is the better option. Think about Go programs as CLI applications. Would you rather crash right away and let the user react, or hang, trying to recover? The same applies to applications running as services. Modern tooling makes it easy to automatically restart a crashing service within seconds.</p>

<p>When necessary, panic without worry.</p>
]]></content>
        </item>
        
        <item>
            <title>If You Can’t Get Flutter to Work with Your Beta Version of Xcode</title>
            <link>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</link>
            <pubDate>Mon, 11 Nov 2019 07:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</guid>
            <description>You need to explicitly set the beta version of Xcode as your default one via the command line:
sudo xcode-select -s /Applications/Xcode-beta.app/Contents/Developer/ Afterwards, getting your app to run via flutter run should work as it used to before.
Related Resources @media (max-width: 640px) { .embed-image { min-width: 100%; } }   select - Managing Multiple Versions Of Xcode  It&amp;#39;s not uncommon developers to have multiple versions of Xcode installed.</description>
            <content type="html"><![CDATA[

<p>You need to explicitly set the beta version of Xcode as your default one via the command line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo xcode-select -s /Applications/Xcode-beta.app/Contents/Developer/</code></pre></div>
<p>Afterwards, getting your app  to run via <code>flutter run</code> should work as it used to before.</p>

<h2 id="related-resources">Related Resources</h2>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  

  <div class="embed-image"
    style="flex: 1 1 0%; background: rgba(0, 0, 0, 0) linear-gradient(#eaeaea 0%, #73747b 100%) repeat scroll 0% 0%; min-height: 120px;">
  </div>

  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        select - Managing Multiple Versions Of Xcode</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      It&#39;s not uncommon developers to have multiple versions of Xcode installed. For example, I typically have the latest beta as well as the most current</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="http://iosdevelopertips.com/xcode/xcode-select-managing-multiple-versions-of-xcode.html">http://iosdevelopertips.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Why I Still Find the Minimap Useful</title>
            <link>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</link>
            <pubDate>Sun, 10 Nov 2019 07:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</guid>
            <description>This is an answer, I wrote in response to a recent blog post by Erica Sadun:
@media (max-width: 640px) { .embed-image { min-width: 100%; } }   My enemy the Minimap  The minimap is one of Xcode 11’s starring features. I know many people were excited for it at its debut but after months of exposure, I now just disable it in the Adjust Editor Options menu (… https://ericasadun.</description>
            <content type="html"><![CDATA[<p>This is an answer, I wrote in response to a recent blog post by <a href="https://ericasadun.com" target="_blank">Erica Sadun</a>:</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://ericasadun.com/wp-content/uploads/2019/11/Screen-Shot-2019-11-08-at-8.07.45-AM.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        My enemy the Minimap</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The minimap is one of Xcode 11’s starring features. I know many people were excited for it at its debut but after months of exposure, I now just disable it in the Adjust Editor Options menu (…</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://ericasadun.com/2019/11/08/my-enemy-the-minimap/">https://ericasadun.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>

<p>Many people ignore a particular use of the minimap - understanding the complexity of some portion of the code, without having to look at each line. In most languages, complexity increases with the level of nesting of code. This is usually difficult to estimate when reading the code itself, since the brain is focused on what the code does, rather than how nested it is. By obscuring the text, and leaving only a bird&rsquo;s-eye view of the layout, the minimap might help pinpoint parts of the code, needing improvement. It can be very helpful when working with someone else code, or with a code base, which you haven&rsquo;t touched in a while.</p>
]]></content>
        </item>
        
        <item>
            <title>How I Stay Focused on Twitter Despite All the Buzz</title>
            <link>https://preslav.me/2019/11/06/how-i-stay-connected-on-twitter/</link>
            <pubDate>Wed, 06 Nov 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/11/06/how-i-stay-connected-on-twitter/</guid>
            <description>With so much going on Twitter, we long have passed the point of being able to just look at our timelines and stay up-to-date. In fact, I have personally stopped following and would even go as far as to remove a significant portion of the people I’ve been following over the years.
From people to topics Before anyone gets offended by my supposed rudeness, let me clear up. I do get to stay up-to-date with a large variety of stuff on Twitter.</description>
            <content type="html"><![CDATA[

<p>With so much going on Twitter, we long have passed the point of being able to just look at our timelines and stay up-to-date. In fact, I have personally stopped following and would even go as far as to remove a significant portion of the people I’ve been following over the years.</p>

<h1 id="from-people-to-topics">From people to topics</h1>

<p>Before anyone gets offended by my supposed rudeness, let me clear up. I do get to stay up-to-date with a large variety of stuff on Twitter. I achieve this with by organizing accounts into thematic lists, combined with clever searching.</p>

<p>If you have never created a single list on Twitter, you’re missing half the fun. At the moment of this writing, I actively curate <a href="https://twitter.com/preslavrachev/lists" target="_blank">around 50 lists</a>. The majority of those revolve around a certain topic I’m interested about, say <a href="https://twitter.com/preslavrachev/lists/go-developers" target="_blank">Go</a> or <a href="https://twitter.com/preslavrachev/lists/python-developers" target="_blank">Python</a> programming. Others are location based (Bremen, Munich, Bulgaria). In short, the fact that I don’t follow people on Twitter into a single timeline does not mean that that I don’t follow them at all. It’s actually the opposite - I follow many more people into many more thematically organized timelines.</p>

<p>This won’t solve the original problem, will it? In fact, many timelines must be making it a hell of a time to stay on top of each one. Well, yes, and this is where the power of clever searching comes to the stage.</p>

<p>In a <a href="https://preslav.me/2018/04/02/how-to-use-twitter-more-efficiently-with-these-hidden-search-features/" target="_blank">previous article</a>, I wrote at length about some of the hidden powers of Twitter searching. One of the many examples I presented in my article was using a Twitter list as the base filter for your search. Put simply, the following search:</p>

<pre><code>list:username/list “climate change”
</code></pre>

<p>Will only return results that match the query <code>climate change</code>, but only within the scope of the given list. Search for the right topics within the right lists, and you automatically get a significant noise reduction. As lists will inevitably get bigger, you can further reduce the noise, by leaving out only tweets with certain popularity or number of responses to.</p>

<pre><code>list:username/list “climate change” min_retweets:3
</code></pre>

<p>or</p>

<pre><code>list:username/list “climate change” min_replies:3
</code></pre>

<p>I have saved many such searches, which I then keep open on my favourite Twitter client. I like using <a href="https://tapbots.com/tweetbot/mac/" target="_blank">TweetBot</a> for iOS and macOS, but one could easily <a href="https://tweetdeck.twitter.com/" target="_blank">TweetDeck’s</a> tabs for the same purpose.</p>

<p><img src="https://i.imgur.com/4ml6zVF.jpg" alt="" /></p>

<hr />

<p>P.S. I hear that Twitter is also going to release some support for topic subscriptions as soon as this week. Let’s wait and see the final outcome. Until then, I keep using the method, I described above.</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://cdn.vox-cdn.com/thumbor/XHLt3wEMJOsEC2eUPaLuGXUQqBw=/0x492:1080x1057/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/19352076/CB_14444_Topics_2.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Twitter is rolling out Topics, a way to follow subjects automatically in the timeline</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      It’s starting with more than 300 subjects across sports, gaming, and entertainment.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.theverge.com/2019/11/6/20948547/twitter-topics-launch-sports-gaming-entertainment-test">https://www.theverge.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Q/A: Why Does an iPhone Need Less Memory Than an Android Phone?</title>
            <link>https://preslav.me/2019/10/31/iphone-less-memory-android/</link>
            <pubDate>Thu, 31 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/31/iphone-less-memory-android/</guid>
            <description>Note: Unlike my usual posts, this is a very basic, non-technical explanation. A friend asked me this question, and I thought I might share the answer here. You can use it on your next cocktail party 🍻
It mainly boils down to how memory garbage gets collected on each platform. iOS applications rely on an approach called Automatic Reference Counting (ARC). Every piece of memory that gets assigned some value gets tracked and released, as soon as the number of its accessors reaches zero.</description>
            <content type="html"><![CDATA[<p><strong>Note:</strong> <em>Unlike my usual posts, this is a very basic, non-technical explanation. A friend asked me this question, and I thought I might share the answer here. You can use it on your next cocktail party 🍻</em></p>

<hr />

<p>It mainly boils down to how memory garbage gets collected on each platform. iOS applications rely on an approach called <a href="https://en.wikipedia.org/wiki/Automatic_Reference_Counting" target="_blank">Automatic Reference Counting (ARC)</a>. Every piece of memory that gets assigned some value gets tracked and released, as soon as the number of its accessors reaches zero.</p>

<p>Android on the other hand, uses a mark-and-sweep garbage collector, known from the <a href="https://en.wikipedia.org/wiki/Java_virtual_machine?wprov=sfti1" target="_blank">Java virtual machine (JVM)</a>. It won’t clean up memory right away, but will occasionally free big chunks of it in one big pass (also known as stop-the-world). This approach assumes that there is a lot of memory available on the device so that these stop-the-world cleanups occur less frequently.</p>

<p>Both approaches have their advantages and disadvantages.</p>
]]></content>
        </item>
        
        <item>
            <title>Any Code Style You like as Long It&#39;s Black</title>
            <link>https://preslav.me/2019/10/26/any-code-style-you-like-as-long-as-it-is-black/</link>
            <pubDate>Sat, 26 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/26/any-code-style-you-like-as-long-as-it-is-black/</guid>
            <description>The other day, I had to go over some (not so) old Python code I wrote. The moment I started pulling my hair, came not when I figured out that I could no longer understand what it does. It was when I looked at how the code was formatted. To be precise - at its total lack of any formatting.
@media (max-width: 640px) { .embed-image { min-width: 100%; } }   psf/black  The uncompromising Python code formatter.</description>
            <content type="html"><![CDATA[

<p>The other day, I had to go over some (not so) old Python code I wrote. The moment I started pulling my hair, came not when I figured out that I could no longer understand what it does. It was when I looked at how the code was formatted. To be precise - at its total lack of <strong>any</strong> formatting.</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://repository-images.githubusercontent.com/125266328/48aef880-6cce-11e9-9e3c-3ca0dd3ac138); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        psf/black</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The uncompromising Python code formatter. Contribute to psf/black development by creating an account on GitHub.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://github.com/psf/black">https://github.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>

<p>The first thing I do when I start a new project nowadays, is to set up an automatic code formatter. My personal favorite for Python is <a href="https://github.com/psf/black" target="_blank">Black</a>. It is an opinionated formatter made by <a href="https://github.com/ambv" target="_blank">Łukasz Langa</a> - a Python Core developer. Black leaves little choice when it comes to configuration. You can think of it as the <a href="https://golang.org/cmd/gofmt/" target="_blank">gofmt</a> or <a href="https://prettier.io/" target="_blank">Prettier</a> of Python. Integrate it with your editor of choice, or use the CLI over your code base and Black will do the rest:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">from</span> seven_dwwarfs <span style="color:#f92672">import</span> Grumpy, Happy, Sleepy, Bashful, Sneezy, Dopey, Doc
x <span style="color:#f92672">=</span> {  <span style="color:#e6db74">&#39;a&#39;</span>:<span style="color:#ae81ff">37</span>,<span style="color:#e6db74">&#39;b&#39;</span>:<span style="color:#ae81ff">42</span>, <span style="color:#e6db74">&#39;c&#39;</span>:<span style="color:#ae81ff">927</span>}

<span style="color:#66d9ef">if</span> very_long_variable_name <span style="color:#f92672">is</span> <span style="color:#f92672">not</span> None <span style="color:#f92672">and</span> \
 very_long_variable_name<span style="color:#f92672">.</span>field <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">or</span> \
 very_long_variable_name<span style="color:#f92672">.</span>is_debug:
 z <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;hello &#39;</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;world&#39;</span>
<span style="color:#66d9ef">else</span>:
 world <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;world&#39;</span>
 a <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;hello {}&#39;</span><span style="color:#f92672">.</span>format(world)
 f <span style="color:#f92672">=</span> rf<span style="color:#e6db74">&#39;hello {world}&#39;</span>
<span style="color:#66d9ef">if</span> (this
<span style="color:#f92672">and</span> that): y <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;hello world&#39;</span></code></pre></div>
<p>will transform into this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">from</span> seven_dwwarfs <span style="color:#f92672">import</span> (
    Grumpy,
    Happy,
    Sleepy,
    Bashful,
    Sneezy,
    Dopey,
    Doc,
)

x <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#34;a&#34;</span>: <span style="color:#ae81ff">37</span>, <span style="color:#e6db74">&#34;b&#34;</span>: <span style="color:#ae81ff">42</span>, <span style="color:#e6db74">&#34;c&#34;</span>: <span style="color:#ae81ff">927</span>}

<span style="color:#66d9ef">if</span> (
    very_long_variable_name <span style="color:#f92672">is</span> <span style="color:#f92672">not</span> None
    <span style="color:#f92672">and</span> very_long_variable_name<span style="color:#f92672">.</span>field <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>
    <span style="color:#f92672">or</span> very_long_variable_name<span style="color:#f92672">.</span>is_debug
):
    z <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;hello &#34;</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;world&#34;</span>
<span style="color:#66d9ef">else</span>:
    world <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;world&#34;</span>
    a <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;hello {}&#34;</span><span style="color:#f92672">.</span>format(world)
    f <span style="color:#f92672">=</span> rf<span style="color:#e6db74">&#34;hello {world}&#34;</span>
<span style="color:#66d9ef">if</span> this <span style="color:#f92672">and</span> that:
    y <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;hello world&#34;</span></code></pre></div>





<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://black.now.sh/static/screenshot.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Black Playground</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      Playground for Black, the uncompromising Python code formatter.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://black.now.sh">https://black.now.sh | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>

<h1 id="isn-t-pep8-enough">Isn&rsquo;t PEP8 enough?</h1>

<p>When it comes to code style, most Python developers point out <a href="https://www.python.org/dev/peps/pep-0008" target="_blank">PEP8</a>. <a href="https://www.python.org/dev/peps/pep-0008" target="_blank">PEP8</a> is a good style guide, but definitely not a set of strict formatting rules. The same piece of code might be written in different ways, and still be compliant with PEP8. This is by design, as much of the Python philosophy is to leave the freedom and the final decision to the programmer. For comparison, Go follows a different mentality, where most of the extra energy aspects of programming are taken over by the compiler and the available tooling.</p>

<p>Unfortunately, even PEP8-compliant code still leads to arguments when it comes to keeping a unified code base. I don&rsquo;t know about you, but I have reached a level of pragmatism, where I don&rsquo;t care much about style and formatting, as long as it has been standardized everywhere. This is where Black enters the stage.</p>

<h1 id="black-is-relentless">Black is relentless</h1>

<p>Black has one guiding philosophy - produce diffs as small as possible. If one expression can fit on a single line (88 chars), regardless of how complex it is, it will be kept on a single line.</p>

<p>In most programming languages, nested expressions (multiple levels of indentation, as well as opening and closing brackets) are what makes code complex. Python list and dict comprehensions can be particularly nasty to comprehend, once they go over a certain length.</p>

<p>Black splits long expressions into multiple lines, where the outermost brackets get separated from the inner content. If the inner content is longer than the line limit, the same operation gets repeated recursively on and on.</p>

<p>The result is code, which, although taking more vertical space than writing a few one-liners, is much easier to read and reason about. The fact that Black will always format your code the same way makes even more sense when working with other people. Lines diffs are the way source control systems indicate changes. Therefore, uniformly splitting complex code into multiple lines makes code reviews easier and takes away almost discussions around style.</p>

<h1 id="black-is-stubborn">Black is stubborn</h1>

<p>Borrowing ideas from <a href="https://golang.org/cmd/gofmt/" target="_blank">gofmt</a>, Black has close to zero configuration options, especially, when it comes to variations of formatting style. I welcome such initiatives, because formatting is not something I would like to personally spend time dealing with. If this is not to your taste, however, you might try out the notable alternatives, such as <a href="https://github.com/google/yapf" target="_blank">yapf</a> and <a href="https://github.com/hhatto/autopep8" target="_blank">autopep8</a>. <a href="https://github.com/google/yapf" target="_blank">yapf</a>, in particular, has multiple code style options, e.g. from Google, Facebook, which you can try and see if any fits your taste. You can always create your own, and share it across all fo your projects.</p>

<h1 id="know-when-to-be-inconsistent">Know when to be inconsistent</h1>

<p>Contrary to everything I have said so far, there might be times when blindlyy following a consistent standard is just inapplicable. As PEP8 says it: <em>&ldquo;When in doubt, use your best judgment. Look at other examples and decide what looks best. And don&rsquo;t hesitate to ask!&rdquo;</em></p>

<hr />


<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="//www.youtube.com/embed/esZLCuWs_2Y" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>


<p>




<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://www.python.org/static/opengraph-icon-200x200.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        PEP 8 -- Style Guide for Python Code</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The official home of the Python Programming Language</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.python.org/dev/peps/pep-0008">https://www.python.org | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>





<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://kevinpeters.net/thumbnails/auto-formatters-for-python-opengraph.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        The 3 best auto formatters for Python</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      🔥Save time by using the best auto formatters for python - a comparison to find the best. The auto formatters in this blog article can be used online or in editors like vscode and feature Python 2 and Python 3.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.kevinpeters.net/auto-formatters-for-python">https://www.kevinpeters.net | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>





<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://avatars0.githubusercontent.com/u/1342004?s=400&amp;v=4); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        google/yapf</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      A formatter for Python files. Contribute to google/yapf development by creating an account on GitHub.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://github.com/google/yapf">https://github.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>





<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://avatars1.githubusercontent.com/u/150309?s=400&amp;v=4); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        hhatto/autopep8</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      A tool that automatically formats Python code to conform to the PEP 8 style guide. - hhatto/autopep8</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://github.com/hhatto/autopep8">https://github.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div></p>
]]></content>
        </item>
        
        <item>
            <title>Go is Good Enough</title>
            <link>https://preslav.me/2019/10/18/go-is-good-enough/</link>
            <pubDate>Fri, 18 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/18/go-is-good-enough/</guid>
            <description>Have you heard about the Pareto Principle? Also known as the 80&amp;frasl;20 Rule, it states that for many aspects of life, 80% of the effects come from 20% of the inputs. Flip it around and the opposite is also true: reaching out for the rest of the 20% requires 80% of the initial effort. It is amazing how many manifestations of both exist in real life. One of the big wisdoms in life - it is often not the smartest, fastest, or strongest individuals that leave a dent.</description>
            <content type="html"><![CDATA[<p>Have you heard about the <a href="https://en.wikipedia.org/wiki/Pareto_principle" target="_blank">Pareto Principle</a>? Also known as the <em><sup>80</sup>&frasl;<sub>20</sub> Rule</em>, it states that for many aspects of life, 80% of the effects come from 20% of the inputs. Flip it around and the opposite is also true: reaching out for the rest of the 20% requires 80% of the initial effort. It is amazing how many manifestations of both exist in real life. One of the big wisdoms in life - it is often not the smartest, fastest, or strongest individuals that leave a dent. It is the ones pragmatic enough to achieve the 80% with 20% of the effort and energy spent.</p>

<p>The slight deviation aside, the same very much applies to the Go programming language. It is just good enough. Go won&rsquo;t win the category of language design, neither is it the fastest one on the market. Nor is it the safest member of the bunch. The truth is, what Go offers on the table might seem pretty boring at first. It is a compiled, statically typed language with an extremely reduced syntax, a somewhat simplified concurrency model, and a bit of memory safety. Nothing near close to the speed of C, the beauty of Ruby or the dogmatic memory management of Rust.</p>

<p>And this is what makes Go succeed. It does not have any of those things, but it is simple and fast enough to get you going on a new project without having to second-guess your approach every second. The lack of features helps reduce the cognitive burden on both the programmer and the compiler. The speed, file-size and memory consumption of the final applications is more optimal than those of 80% of applications built using other technologies.</p>

<p>Will Go ever be the best in any single programming language category? Probably no. Is it good enough to sustain 80% of your programming efforts? Absolutely!</p>

<hr />






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  

  <div class="embed-image"
    style="flex: 1 1 0%; background: rgba(0, 0, 0, 0) linear-gradient(#eaeaea 0%, #73747b 100%) repeat scroll 0% 0%; min-height: 120px;">
  </div>

  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Pareto principle - Wikipedia</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The Pareto principle (also known as the 80/20 rule, the law of the vital few, or the principle of factor sparsity)[1][2] states that, for many events, roughly 80% of the effects come from 20% of the causes.[3] Management consultant Joseph M. Juran suggested the principle and named it after Italian economist Vilfredo Pareto, who noted the 80/20 connection while at the University of Lausanne in 1896, as published in his first work, Cours d&#39;économie politique. In it, Pareto showed that approximately 80% of the land in Italy was owned by 20% of the population.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://en.wikipedia.org/wiki/Pareto_principle">https://en.wikipedia.org | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
        <item>
            <title>This Is How We Write History</title>
            <link>https://preslav.me/2019/10/12/this-is-how-we-write-history/</link>
            <pubDate>Sat, 12 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/12/this-is-how-we-write-history/</guid>
            <description>This morning, a humble distance runner from Kenya once again proved that the impossible is only a state of mind. A performance, more resembling a concert symphony than an endurance race. Eliud Kipchoge broke the 2-hour marathon barrier today - something that for years was deemed unthinkable for any human being:
  This is the beginning of a new era of running. I am certain that Kipchoge&amp;rsquo;s achievement will inspire others, if not to try a and beat it, to at least get out and be active.</description>
            <content type="html"><![CDATA[<p>This morning, a humble distance runner from Kenya once again proved that the impossible is only a state of mind. A performance, more resembling a concert symphony than an endurance race. Eliud Kipchoge broke the 2-hour marathon barrier today - something that for years was deemed unthinkable for any human being:</p>


<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="//www.youtube.com/embed/km3NxpOq3NU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>


<p>This is the beginning of a new era of running. I am certain that Kipchoge&rsquo;s achievement will inspire others, if not to try a and beat it, to at least get out and be active.</p>

<p>No human is limited!</p>

<p>To the critics: Yes, it was not an official race, yes, Kipchoge did wear special cushioned shoes, and drank electrolyte gels. Yes, it was an incredibly well engineering feat. One, where everyone, from the shoe designer and the single factory worker, through the pacers, crewmen, and spectators, to Kipchoge himself, played an equally important part.</p>

<p>And so it should be. As a species, we have been destined to move forward and achieve great things only when doing things together. There is nothing wrong with that. In fact, this victory comes right time, when we badly need the good example of a group of individuals achieving the impossible by going beyond the limitations of body, mind, and spirit.</p>

<blockquote>
<p>&ldquo;We have made history together, and together we can make this world a beautiful world.&rdquo; -</p>

<p>Eliud Kipchoge</p>
</blockquote>

<p>Cheers!</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://img.olympicchannel.com/images/image/private/t_social_share_thumb/primary/hddlcbqmdekn5lbrkin5); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Eliud Kipchoge runs first ever sub-two hour marathon</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      Kenya&#39;s marathon Olympic champion and world record holder Kipchoge clocked 1:59:40 on a historic morning in Vienna</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.olympicchannel.com/en/stories/news/detail/eliud-kipchoge-first-sub-two-hour-marathon/">https://www.olympicchannel.com | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
        <item>
            <title>What&#39;s New in Mixtape</title>
            <link>https://preslav.me/2019/10/10/what-is-new-in-mixtape/</link>
            <pubDate>Thu, 10 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/10/what-is-new-in-mixtape/</guid>
            <description>Give me more like these&amp;hellip; Search engines are a great tool for content discovery beyond the simple text searching. Often, it is difficult to express exactly what we are looking for. This may be due to limitations of the interface, or our own struggle to explain it in enough detail. There is one thing, however, which we are fairly good at. Given two things, we can easily say which one we like more than the other.</description>
            <content type="html"><![CDATA[

<h2 id="give-me-more-like-these">Give me more like these&hellip;</h2>

<p>Search engines are a great tool for content discovery beyond the simple text searching. Often, it is difficult to express exactly what we are looking for. This may be due to limitations of the interface, or our own struggle to explain it in enough detail. There is one thing, however, which we are fairly good at. Given two things, we can easily say which one we like more than the other.</p>

<p>With the most recent update on <a href="https://mixtape.preslav.me/" target="_blank">Mixtape</a>, I have added the ability to use Mixtape as a way to discover new podcast episodes, by simply providing the IDs of ones that might be of interest to you. Those who have worked with search engines before, probably know that this is something that this type of applications are fairly well-suited, but not often used for. In particular, ElasticSearch (the brain behind the whole search operation) has a particular type of search query, which allows for just that.</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://www.elastic.co/static/images/elastic-logo-200.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        More like this query | Elasticsearch Reference [7.4]</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The More Like This Query finds documents that are &#34;like&#34; a given
set of documents. In order to do so, MLT selects a set of representative terms
of these input documents, forms a query using these terms, executes the query
and returns the results. The user controls the input documents, how the terms
should be selected and how the query is formed.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html">https://www.elastic.co | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>

<h2 id="next-steps">Next steps</h2>

<p>Currently, this is still an API-only feature, but it will open up the door for applications of various sorts. One particular thing I am working on, is in the form of a chat bot application, which one will be able to send podcast episode links to (e.g. from <a href="https://overcast.fm/" target="_blank">Overcast</a>, <a href="https://www.pocketcasts.com/" target="_blank">Pocket Casts</a>, <a href="https://www.apple.com/itunes/" target="_blank">Apple Podcasts</a>, etc) and get related podcast episodes to keep listening to.</p>

<p>Stay tuned!</p>
]]></content>
        </item>
        
        <item>
            <title>A Few Broken Windows</title>
            <link>https://preslav.me/2019/10/10/a-few-broken-windows-apple-ios13/</link>
            <pubDate>Thu, 10 Oct 2019 08:35:04 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/10/a-few-broken-windows-apple-ios13/</guid>
            <description>I have been using iOS 13 / iPadOS / watchOS 6 for a couple of weeks now. My general impression: something seems a bit off. Don&amp;rsquo;t get me wrong, the new features are great. I totally love the Dark Mode support, the new Notes features, etc. I also have managed to get through the whole update phase without any major issues. No iCloud syncing problems, no significant battery drain, no frequent restarts, or any of the kind.</description>
            <content type="html"><![CDATA[<p>I have been using iOS 13 / iPadOS / watchOS 6 for a couple of weeks now. My general impression: something seems a bit off. Don&rsquo;t get me wrong, the new features are great. I totally love the Dark Mode support, the new Notes features, etc. I also have managed to get through the whole update phase without any major issues. No iCloud syncing problems, no significant battery drain, no frequent restarts, or any of the kind. Yet, there are many tiny things that give a feeling of something unfinished. The worst thing is, those used to work in previous OS versions, and they do now too, but only sometimes:</p>

<ul>
<li>copying links and files between Apple devices occasionally won&rsquo;t happen</li>
<li>the same for the new Share Sheet. Sometimes, I&rsquo;d keep tapping an app or an action several times and nothing would happen.</li>
<li>when running the Apple Watch in Cinema Mode, tapping the screen might not wake it up. Sometimes, up to four or five taps were needed.</li>
<li>Apple Pay occasionally won&rsquo;t open up on a double tap.</li>
</ul>

<p>If those were all things that did not work in general, I wouldn&rsquo;t t be worried. Those I am sure that Apple would have fixed by now. What worries me are those many tiny things that work most of the time, but often fail to do so. I know from experience with the the products that I have been working on that those are the issues that cause the most customer distrust, because of being treated as <em>working</em>.</p>

<p>P.S. All of this reminds me of:</p>






<style scoped>
  @media (max-width: 640px) {
    .embed-image {
      min-width: 100%;
    }
  }
</style>
<div
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%">

  
  <div class="embed-image"
    style="flex:1; background: url(https://upload.wikimedia.org/wikipedia/commons/6/6e/Pentonvilleiso19.jpg); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://gohugo.io/">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Broken windows theory - Wikipedia</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      Theory</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://en.wikipedia.org/wiki/Broken_windows_theory">https://en.wikipedia.org | </a></div>
      <div style="float: right">Created with <a
          href="https://noembed.preslav.me/">NoEmbed</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
    </channel>
</rss>
