<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Random Bits of Wisdom</title>
    <link>https://preslav.me/tags/programming/</link>
    <description>Recent content in Programming on Random Bits of Wisdom</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 26 Jan 2020 08:35:04 +0000</lastBuildDate>
    
	<atom:link href="https://preslav.me/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Crystal in Go‚Äôs World</title>
      <link>https://preslav.me/2020/01/26/a-crystal-in-go-s-world/</link>
      <pubDate>Sun, 26 Jan 2020 08:35:04 +0000</pubDate>
      
      <guid>https://preslav.me/2020/01/26/a-crystal-in-go-s-world/</guid>
      <description>Imagine a programming language with the ergonomic syntax of Ruby, the speed of execution of C, the concurrency model of Go, and last but not least, a compiler that performs null checks at compile time. Sounds like a dream? Well, this language exists, but chances are, you haven‚Äôt heard of it so far.
Meet Crystal!
Crystal is all of the above, plus it has types, outstanding documentation, and a strong community, delivering a steady stream of new libraries (a.</description>
    </item>
    
    <item>
      <title>Reflecting on My Experience With Go, One Year After</title>
      <link>https://preslav.me/2020/01/17/reflecting-on-my-experience-with-go-one-year-after/</link>
      <pubDate>Fri, 17 Jan 2020 08:35:04 +0000</pubDate>
      
      <guid>https://preslav.me/2020/01/17/reflecting-on-my-experience-with-go-one-year-after/</guid>
      <description>In my little more than a year day-to-day developer experience with Go, I have so far learned three things:
 I can change my entire view of how programming works, even after 12+ years of doing it in one form or another. People are blaming Java for all the wrong reasons People are praising Go for all the wrong reasons  Let me explain. This post is not about saying that ‚Äúlanguage A is better than language B‚Äù, or vice versa.</description>
    </item>
    
    <item>
      <title>Panic Without Worry</title>
      <link>https://preslav.me/2019/12/14/panic-without-worry/</link>
      <pubDate>Sat, 14 Dec 2019 22:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/12/14/panic-without-worry/</guid>
      <description>In the Go community, there is some kind of paranoia around panicking, as if it‚Äôs the worst thing that can happen to your application. In fact, it often is the better option. Think about Go programs as CLI applications. Would you rather crash right away and let the user react, or hang, trying to recover? The same applies to applications running as services. Modern tooling makes it easy to automatically restart a crashing service within seconds.</description>
    </item>
    
    <item>
      <title>If You Can‚Äôt Get Flutter to Work with Your Beta Version of Xcode</title>
      <link>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</link>
      <pubDate>Mon, 11 Nov 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</guid>
      <description>You need to explicitly set the beta version of Xcode as your default one via the command line:
sudo xcode-select -s /Applications/Xcode-beta.app/Contents/Developer/ Afterwards, getting your app to run via flutter run should work as it used to before.
Related Resources @media (max-width: 640px) { .embed-image { min-width: 100%; } }   select - Managing Multiple Versions Of Xcode  It&amp;#39;s not uncommon developers to have multiple versions of Xcode installed.</description>
    </item>
    
    <item>
      <title>Why I Still Find the Minimap Useful</title>
      <link>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</link>
      <pubDate>Sun, 10 Nov 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</guid>
      <description>This is an answer, I wrote in response to a recent blog post by Erica Sadun:
@media (max-width: 640px) { .embed-image { min-width: 100%; } }   My enemy the Minimap  The minimap is one of Xcode 11‚Äôs starring features. I know many people were excited for it at its debut but after months of exposure, I now just disable it in the Adjust Editor Options menu (‚Ä¶ https://ericasadun.</description>
    </item>
    
    <item>
      <title>Go is Good Enough</title>
      <link>https://preslav.me/2019/10/18/go-is-good-enough/</link>
      <pubDate>Fri, 18 Oct 2019 22:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/10/18/go-is-good-enough/</guid>
      <description>Have you heard about the Pareto Principle? Also known as the 80&amp;frasl;20 Rule, it states that for many aspects of life, 80% of the effects come from 20% of the inputs. Flip it around and the opposite is also true: reaching out for the rest of the 20% requires 80% of the initial effort. It is amazing how many manifestations of both exist in real life. One of the big wisdoms in life - it is often not the smartest, fastest, or strongest individuals that leave a dent.</description>
    </item>
    
    <item>
      <title>Simple Immutable Builders in Go, Using Value Receivers</title>
      <link>https://preslav.me/2019/10/06/simple-immutable-builders-in-go-using-value-receivers/</link>
      <pubDate>Sun, 06 Oct 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/10/06/simple-immutable-builders-in-go-using-value-receivers/</guid>
      <description>Even in a simple language like Go, concurrently updating mutable state is like playing with fire. Take this piece of code, for example:
l := content.NewLoader() l.PageCount = 5 c := l.Load(bytes) Can you be sure that what you are loading is actually going to contain five pages? What if another goroutine having access to l, interjects and sets PageCount to 1000? Or worse, updates the state of l such that a panic is inevitable?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201908031736/</link>
      <pubDate>Fri, 02 Aug 2019 22:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201908031736/</guid>
      <description>My first attempt to try out compiling a Micronaut app to a native GraalVM image ended up with a disastrous &amp;ldquo;Out of Memory&amp;rdquo;. After more than ten minutes of a spinning fan (on a 4-core machine with 16GB RAM) that&amp;rsquo;s what I got:
I am fully aware that the hoops that the GraalVM compile has to go through are simply phenomenal, and I have heard many good words about the level of performance that apps are able to reach this way.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201907241129/</link>
      <pubDate>Wed, 24 Jul 2019 09:29:54 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201907241129/</guid>
      <description>Apple is becoming a macOS gatekeeper too.
 For the past 35 years, any Mac developer who wanted to ship an update directly to customers could do so by recompiling a binary and distributing it. When macOS 10.15 ships this fall, the status quo will change. Mac developers must register with Apple and sign their products. They must submit their binaries to Apple for notarization. And most significantly of all, they must agree to the terms of Apple‚Äôs App Store developer contracts, even if they don‚Äôt distribute their apps through the App Store.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201907101824/</link>
      <pubDate>Wed, 10 Jul 2019 16:24:12 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201907101824/</guid>
      <description>#TIL about the breakpoint() function in #Python 3.7 It starts a pdb session when the statement gets reached.
This is quite neat and might save me one or two print statements üòâ
Thanks to @FlorimondManca for this discovery!</description>
    </item>
    
  </channel>
</rss>