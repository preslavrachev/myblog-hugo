<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Preslav Rachev</title>
    <link>https://preslav.me/tags/programming/</link>
    <description>Recent content in Programming on Preslav Rachev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Nov 2019 07:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://preslav.me/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>If You Can‚Äôt Get Flutter to Work with Your Beta Version of Xcode</title>
      <link>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</link>
      <pubDate>Mon, 11 Nov 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/11/11/get-flutter-to-work-with-beta-xcode/</guid>
      <description>You need to explicitly set the beta version of Xcode as your default one via the command line:
sudo xcode-select -s /Applications/Xcode-beta.app/Contents/Developer/ Afterwards, getting your app to run via flutter run should work as it used to before.
Related Resources select - Managing Multiple Versions Of Xcode    It&amp;#39;s not uncommon developers to have multiple versions of Xcode installed. For example, I typically have the latest beta as well as the most current</description>
    </item>
    
    <item>
      <title>Why I Still Find the Minimap Useful</title>
      <link>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</link>
      <pubDate>Sun, 10 Nov 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/11/10/why-i-still-find-the-minimap-useful/</guid>
      <description>This is an answer, I wrote in response to a recent blog post by Erica Sadun:
My enemy the Minimap    The minimap is one of Xcode 11‚Äôs starring features. I know many people were excited for it at its debut but after months of exposure, I now just disable it in the Adjust Editor Options menu (‚Ä¶
Source: - Erica Sadun   Many people ignore a particular use of the minimap - understanding the complexity of some portion of the code, without having to look at each line.</description>
    </item>
    
    <item>
      <title>Go is Good Enough</title>
      <link>https://preslav.me/2019/10/18/go-is-good-enough/</link>
      <pubDate>Fri, 18 Oct 2019 22:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/10/18/go-is-good-enough/</guid>
      <description>Have you heard about the Pareto Principle? Also known as the 80&amp;frasl;20 Rule, it states that for many aspects of life, 80% of the effects come from 20% of the inputs. Flip it around and the opposite is also true: reaching out for the rest of the 20% requires 80% of the initial effort. It is amazing how many manifestations of both exist in real life. One of the big wisdoms in life - it is often not the smartest, fastest, or strongest individuals that leave a dent.</description>
    </item>
    
    <item>
      <title>Simple Immutable Builders in Go, Using Value Receivers</title>
      <link>https://preslav.me/2019/10/06/simple-immutable-builders-in-go-using-value-receivers/</link>
      <pubDate>Sun, 06 Oct 2019 07:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/2019/10/06/simple-immutable-builders-in-go-using-value-receivers/</guid>
      <description>Even in a simple language like Go, concurrently updating mutable state is like playing with fire. Take this piece of code, for example:
l := content.NewLoader() l.PageCount = 5 c := l.Load(bytes) Can you be sure that what you are loading is actually going to contain five pages? What if another goroutine having access to l, interjects and sets PageCount to 1000? Or worse, updates the state of l such that a panic is inevitable?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201908031736/</link>
      <pubDate>Fri, 02 Aug 2019 22:00:00 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201908031736/</guid>
      <description>My first attempt to try out compiling a Micronaut app to a native GraalVM image ended up with a disastrous &amp;ldquo;Out of Memory&amp;rdquo;. After more than ten minutes of a spinning fan (on a 4-core machine with 16GB RAM) that&amp;rsquo;s what I got:
I am fully aware that the hoops that the GraalVM compile has to go through are simply phenomenal, and I have heard many good words about the level of performance that apps are able to reach this way.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201907241129/</link>
      <pubDate>Wed, 24 Jul 2019 09:29:54 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201907241129/</guid>
      <description>Apple is becoming a macOS gatekeeper too.
 For the past 35 years, any Mac developer who wanted to ship an update directly to customers could do so by recompiling a binary and distributing it. When macOS 10.15 ships this fall, the status quo will change. Mac developers must register with Apple and sign their products. They must submit their binaries to Apple for notarization. And most significantly of all, they must agree to the terms of Apple‚Äôs App Store developer contracts, even if they don‚Äôt distribute their apps through the App Store.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201907101824/</link>
      <pubDate>Wed, 10 Jul 2019 16:24:12 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201907101824/</guid>
      <description>#TIL about the breakpoint() function in #Python 3.7 It starts a pdb session when the statement gets reached.
This is quite neat and might save me one or two print statements üòâ
Thanks to @FlorimondManca for this discovery!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201907022242/</link>
      <pubDate>Tue, 02 Jul 2019 19:42:07 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201907022242/</guid>
      <description>‚ÄúOnce a language gets complex enough, programming in it is more like carving out a subset from an infinite sea of features, most of which we‚Äôll never learn. Once a language feels infinite, the costs of adding further features to it are no longer apparent‚Äù. - Mark Miller
 An Open Letter To The Go Team About Try    ‚ÄúOnce a language gets complex enough, programming in it is more like carving out a subset from an infinite sea of features, most of which we‚Äôll never learn.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://preslav.me/microblog/201906211000/</link>
      <pubDate>Fri, 21 Jun 2019 08:00:18 +0000</pubDate>
      
      <guid>https://preslav.me/microblog/201906211000/</guid>
      <description>It‚Äôs amazing‚Äâ‚Äî amazing I say‚Äâ‚Äî‚Äâhow little generics are missed. To date, Go remains the small, simple language that fogies like me can remember Java being. I suppose that can‚Äôt last, but for now, I can pop open almost any .go file and if I can‚Äôt understand it pretty quick, the chances are very high that the problem is in the code not me.
 ongoing by Tim Bray ¬∑ Go Creeping In    I‚Äôve seen the inside of the Google and Amazon tech stacks.</description>
    </item>
    
    <item>
      <title>Using Ephemeral Docker Containers as CLI Applications</title>
      <link>https://preslav.me/2019/03/18/using-ephemeral-docker-containers-as-cli-applications/</link>
      <pubDate>Mon, 18 Mar 2019 06:30:04 +0000</pubDate>
      
      <guid>https://preslav.me/2019/03/18/using-ephemeral-docker-containers-as-cli-applications/</guid>
      <description>Docker containers have proven themselves extremely useful in allowing developers to sandbox environments and ease the deployment of services. Have a complicated service setup? No worries. Simply, describe the steps in a Dockerfile and you should be able to replicate the process on every host OS that has Docker support.
When I said services, I bet that the first thing you thought about was HTTP servers, or some sort of persistent, always running processes that send or accept requests to such services.</description>
    </item>
    
    <item>
      <title>Kotlin ‚ù§Ô∏è Data Science? (Part 1)</title>
      <link>https://preslav.me/2019/02/03/kotlin-loves-data-science/</link>
      <pubDate>Sun, 03 Feb 2019 14:29:06 +0000</pubDate>
      
      <guid>https://preslav.me/2019/02/03/kotlin-loves-data-science/</guid>
      <description>A few days ago, I was invited to give a talk at the Munich Kotlin Users Group meetup (check out my slides here) For quite some time, I have had an idea to promote Kotlin as the missing link between software engineering and Data Science. DuringKotlinConf 2018, I had the chance and the privilege to meet a couple of amazing people, whose talks only helped confirm my thoughts.
   Mathematical Modeling with Kotlin | Thomas Nield</description>
    </item>
    
    <item>
      <title>Use Dotenv Files When Developing Your Python Apps</title>
      <link>https://preslav.me/2019/01/09/dotenv-files-python/</link>
      <pubDate>Wed, 09 Jan 2019 06:28:16 +0000</pubDate>
      
      <guid>https://preslav.me/2019/01/09/dotenv-files-python/</guid>
      <description>Hard-coding configuration is bad. This is one of the things that newbie programmers learn quickly after they realize that have committed sensitive information to a public GitHub repository. And it happens so easily. Often, you are in the spur of the moment, wanting to test something locally, when you figure out that you need some API key in order for your app to work. Adding the key to the code takes a second, and is just as easy to forget when committing.</description>
    </item>
    
    <item>
      <title>Dependency Injection in Python: The Java Guy&#39;s Perspective</title>
      <link>https://preslav.me/2018/12/20/dependency-injection-in-python/</link>
      <pubDate>Thu, 20 Dec 2018 13:34:36 +0000</pubDate>
      
      <guid>https://preslav.me/2018/12/20/dependency-injection-in-python/</guid>
      <description>Dependency Injection (DI) in Python? Seriously? ü§î
At this point, I am expecting people to yell at me for thinking like a Java guy, but just bear with me for a moment, will you? Spoiler: I am going to mention Spring only once in this post, I promise.
NOTE: If you are already familiar with Dependency Injection and want to see it in action, you might want to jump right to the example at the end.</description>
    </item>
    
    <item>
      <title>Designing Well-Structured REST APIs with Flask-RestPlus: Part 1</title>
      <link>https://preslav.me/2018/12/02/designing-well-structured-rest-apis-with-flask-restplus-part-1/</link>
      <pubDate>Sun, 02 Dec 2018 15:46:47 +0000</pubDate>
      
      <guid>https://preslav.me/2018/12/02/designing-well-structured-rest-apis-with-flask-restplus-part-1/</guid>
      <description>This is the first part of a two-part series. In this post, I will introduce Flask-RestPlus and demonstrate how to start organising APIs around its simple REST-based conventions. Next time, I will address the topic of request/response marshalling (serialisation) and validation.
A seasoned Spring developer, I felt a bit uneasy when designing and future-proofing a Flask-based API for the first time. I have recently started using Python way beyond my original intention to just play with data, and found Flask to be a super-easy micro-service alternative to Spring Boot or Ktor.</description>
    </item>
    
    <item>
      <title>Data Science on Your iPad</title>
      <link>https://preslav.me/2018/08/12/data-science-on-your-ipad/</link>
      <pubDate>Sun, 12 Aug 2018 05:29:00 +0000</pubDate>
      
      <guid>https://preslav.me/2018/08/12/data-science-on-your-ipad/</guid>
      <description>This article is a follow-up transcription to a talk I recently gave at a local Munich machine learning meetup. Unlike my previous talk, this time I wanted to convey the idea of using an iPad for actively running data science experiments, as opposed to passively consuming information. I illustrated my point with a few example iOS applications I personally use on a daily basis, which I hope would be good starting points to get the audience interested in the idea.</description>
    </item>
    
    <item>
      <title>Live-reloading of Python Modules in the Python REPL / IPython / Jupyter Console</title>
      <link>https://preslav.me/2018/04/22/live-reloading-of-python-modules/</link>
      <pubDate>Sun, 22 Apr 2018 04:14:00 +0000</pubDate>
      
      <guid>https://preslav.me/2018/04/22/live-reloading-of-python-modules/</guid>
      <description>Often, I would work on a Python module and add changes to it live, which I would then want to test immediately. Piece of cake! Add the changes and execute the script again. Well, that‚Äôs certainly a way, but as modules get bigger, they tend to import other modules, or do some preliminary setup work.
With time, I have developed this practice of opening up a Python REPL (though I recommend IPython or the Jupyter Console for that), importing my in-progress module and singling out separate functions I would like to test.</description>
    </item>
    
    <item>
      <title>Debugging Network Calls in React Native Using the Chrome Debugger</title>
      <link>https://preslav.me/2017/03/26/debugging-network-calls-in-react-native-using-the-chrome-debugger/</link>
      <pubDate>Sun, 26 Mar 2017 05:25:00 +0000</pubDate>
      
      <guid>https://preslav.me/2017/03/26/debugging-network-calls-in-react-native-using-the-chrome-debugger/</guid>
      <description>TL;DR! Just give me the code In your index.js file (or your platform-specific index file for that matter), simply add the following line to the top, directly after the import statements:
XMLHttpRequest = GLOBAL.originalXMLHttpRequest ? GLOBAL.originalXMLHttpRequest : GLOBAL.XMLHttpRequest;  You will also need a Chrome plugin that overrides CORS. I use CORS Toggle. You may also decide to skip the plugin and start Chrome with CORS disabled:
chrome --disable-web-security then, as usually, start remote debugging from your app, and open: http://localhost:8081/debugger-ui on your computer.</description>
    </item>
    
    <item>
      <title>What‚Äôs with the 50/72 rule?</title>
      <link>https://preslav.me/2015/02/21/what-s-with-the-50-72-rule/</link>
      <pubDate>Sat, 21 Feb 2015 06:59:00 +0000</pubDate>
      
      <guid>https://preslav.me/2015/02/21/what-s-with-the-50-72-rule/</guid>
      <description>It is part of common sense to assume that the worthiest commit messages lie far from any extremes. Years ago, I often fell in the trap of hastily sending a commit after commit, annoyed by the fact that I have to add a summary to it (let alone a description). I&amp;rsquo;ve seen many projects whose commit summaries consist primarily of one-word verbs like [FIX], [CLEAN], [TEST], etc.
They don&amp;rsquo;t tell much do they?</description>
    </item>
    
    <item>
      <title>Gulp vs Grunt. Why one? Why the Other?</title>
      <link>https://preslav.me/2015/01/06/gulp-vs-grunt-why-one-why-the-other/</link>
      <pubDate>Tue, 06 Jan 2015 06:29:00 +0000</pubDate>
      
      <guid>https://preslav.me/2015/01/06/gulp-vs-grunt-why-one-why-the-other/</guid>
      <description>So you&amp;rsquo;ve been trying to wrap your heads around and decide between Grunt and Gulp? Yeah, me too, been there, done that. In my case, the decision wasn&amp;rsquo;t really hard. I&amp;rsquo;ve never had strong feelings for Grunt, and for a long time, I used a custom made ANT script. I used to copy it over to every new project, and it helped me with basic tasks‚Ää‚Äî‚Äämoving, copying, cleaning, linting, minifying, etc.</description>
    </item>
    
  </channel>
</rss>