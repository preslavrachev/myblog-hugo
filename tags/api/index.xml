<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>API on Random Bits of Wisdom</title>
        <link>https://preslav.me/tags/api/</link>
        <description>Recent content in API on Random Bits of Wisdom</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Sun, 17 May 2020 22:00:00 +0000</lastBuildDate>
        <atom:link href="https://preslav.me/tags/api/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Auth0 Struggles: Access A Signed-Up User&#39;s App Metadata </title>
            <link>https://preslav.me/2020/05/17/auth0-struggles-access-a-signed-up-user-s-app-metadata/</link>
            <pubDate>Sun, 17 May 2020 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2020/05/17/auth0-struggles-access-a-signed-up-user-s-app-metadata/</guid>
            <description>For quite some time, I have been fighting with Auth0 to get the app metadata I am storing for each user. It wasn&amp;rsquo;t easy, which is why I decided to document my steps.</description>
            <content type="html"><![CDATA[

<p>For quite some time, I have been fighting with <a href="https://auth0.com/">Auth0</a> to get the app metadata I am storing for each user. For those new to Auth0, app metadata is a convenience object that allows the storing of read-only data for each user (e.g. API keys, which plan they are on, progress within application, etc).</p>








<div class="embed"
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%; margin-bottom: 1rem">

  
  <div class="embed-image"
    style="flex:1; background: url(https://cdn.auth0.com/website/homepage/tc/twitter-card-en.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://auth0.com">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Auth0: Identity is Complex. Deal with it.</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      Rapidly integrate authentication and authorization for web, mobile, and legacy applications so you can focus on your core business.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://auth0.com">https://auth0.com | </a></div>
      <div style="float: right">Created with <a
          href="https://linqable.pro/">Linqable</a></div>
    </div>
  </div>
</div>

<p>After successfully managing to integrate Auth0 in my current project, I realized that the user profile information available after a user signs up/in, does not contain the app metadata I need. These metadata are only available in <a href="https://auth0.com/docs/users/guides/manage-users-using-the-management-api">Auth0&rsquo;s Management API</a>, i.e. only available with client ID/Secret credentials (and rightly so).</p>

<h1 id="obtain-a-management-api-access-token">Obtain a Management API access token</h1>

<pre><code class="language-bash">curl --request POST \
  --url https://[YOUR_TENANT].eu.auth0.com/oauth/token \
  --header 'content-type: application/json' \
  -- data '{&quot;client_id&quot;: &quot;YOUR_CLIENT_ID&quot;, &quot;client_secret&quot;: &quot;YOUR_CLIENT_SECRET&quot;, audience: &quot;YOUR_AUDIENCE&quot;, &quot;grant_type&quot;:&quot;client_credentials&quot;}'
</code></pre>

<p>Audience will likely look like this: <code>https://[YOUR_TENANT].[ZONE, e.g. eu].auth0.com/api/v2</code></p>

<p>if everything is successful, you will receive a response from Auth0, containing an access token:</p>

<pre><code class="language-json">{
	&quot;access_token&quot;: &quot;abcd1234&quot;,
	&quot;token_type&quot;: &quot;Bearer&quot;
} 
</code></pre>

<p>This is the point to make a pause and say that you might instead get various errors. One very common is this:</p>

<pre><code>Client is not authorized to access \&quot;https://[YOUR_TENANT].eu.auth0.com/api/v2/\&quot;
</code></pre>

<p>In simple words, this means that your Auth0 application might not have been attached to the Auth0 Management API. To do so, go to <code>APIs &gt; Auth0 Management API &gt; Machine to Machine Applications</code> and see if your application is in the list (add if not), and if the &ldquo;Authorized&rdquo; toggle has been turned on.</p>

<p>While you are there, expand the item of your application in this list, and select the grants that you want to give it. My advice is to be on the safe side and choose the minimal number of grants you need. In my case, this would be <code>read:users</code> only.</p>

<p><img src="/images/2020/05/auth0-permissions.png" alt="" /></p>

<p>If you don&rsquo;t do so, you might end up getting another error, namely:</p>

<pre><code>Client has not been granted scopes: read:users
</code></pre>

<h1 id="obtaining-the-app-metadata">Obtaining the app metadata</h1>

<p>Once we have obtained our access token, <a href="https://auth0.com/docs/api/management/v2#!/Users/get_users_by_id">getting the app metadata</a> out of the available user information is easy:</p>

<pre><code class="language-bash">curl -H &quot;Authorization: Bearer abcd1234&quot; [https://[YOUR_TENANT].eu.auth0.com/api/v2/users/1234](https://prs.eu.auth0.com/api/v2/users/1234)
</code></pre>

<p>For reference, <a href="https://auth0.com/docs/api/management/v2#!/Users/get_users_by_id">check out the full Management API Docs</a>.</p>
]]></content>
        </item>
        
        <item>
            <title>Introducing NoEmbed</title>
            <link>https://preslav.me/2019/06/20/introducing-noembed/</link>
            <pubDate>Thu, 20 Jun 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/06/20/introducing-noembed/</guid>
            <description>Linqable: ⚡️ fast and engaging link previews  Linqable turns URLs into beautiful and engaging previews. Using a combination of smart extraction techniques, it finds and extracts as much information about the provided URL as possible. https://noembed.preslav.me |  Created with Linqable    A picture is worth a thousand words. Everyone knows that. How about, a preview is worth a thousand links, however? If you have ever written a Medium article, more than certainly, you have tried adding links to videos or other Web pages.</description>
            <content type="html"><![CDATA[








<div class="embed"
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%; margin-bottom: 1rem">

  
  <div class="embed-image"
    style="flex:1; background: url(https://images.unsplash.com/photo-1522204523234-8729aa6e3d5f?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1280&amp;q=80); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://noembed.preslav.me">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        Linqable: ⚡️ fast and engaging link previews</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      Linqable turns URLs into beautiful and engaging previews. Using a combination of smart extraction techniques, it finds and extracts as much information about the provided URL as possible.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://noembed.preslav.me">https://noembed.preslav.me | </a></div>
      <div style="float: right">Created with <a
          href="https://linqable.pro/">Linqable</a></div>
    </div>
  </div>
</div>

<hr />

<p>A picture is worth a thousand words. Everyone knows that. How about, <em>a preview is worth a thousand links</em>, however? If you have ever written a <a href="https://medium.com/">Medium</a> article, more than certainly, you have tried adding links to videos or other Web pages. One of the cool features that distinguished Medium early on, were its really nice link previews. Simply, dropping a link will turn it into a block of information containing a title, an image, and an informative description:</p>

<p><img src="/images/2019/06/noembed.gif" alt="" /></p>

<p>In fact, if you keep looking around, you will find quite a few other apps adopting the same idea. <a href="https://slack.com">Slack</a> and <a href="https://www.notion.so/">Notion</a> are good examples that come to mind. Such previews are great, because unlike plain links, they deliver much more context, and therefore, help increase visitor engagement.</p>

<p>I wanted to provide similar link previews to my personal website, but what I found right away was how poorly adopted <a href="https://oembed.com/">oEmbed</a> is out in the world. I will discuss <a href="https://oembed.com/">oEmbed</a> in detail in a further post, but basically, it is a Web format allowing website owners to expose structured information for every particular link in that website. A good example is YouTube. If you check out the <a href="http://www.youtube.com/oembed?url=http%3A//youtube.com/watch%3Fv%3DM3r2XDceM6A&amp;format=json">following link</a>, you will get a JSON object will all the information about the video in the URL parameter. This info is ready to be rendered as a preview in a site or an app that consumes it.</p>

<p>The problems with oEmbed are apparent right away. In order for you to use it, the order side must have adopted it, and exposed an API endpoint for you to obtain metadata. Even if you built a proxy service that wrapped all the known oEmbed providers on the Web, you are essentially limited to the number of those providers. What about the rest of the Web?</p>

<p>Those were the thoughts that made me start working on what I called <a href="https://noembed.preslav.me/">NoEmbed</a>. It solves the problem with the limited number of oEmbed providers by employing smart content extraction characteristics where needed. By using an officially provided list of well-known oEmbed providers, the service proxies to them when possible. Most of the time, however, <a href="https://noembed.preslav.me/">NoEmbed</a> grabs the content of the requested URL, extracts valuable information out of it (title, excerpt, main image, etc) and returns an oEmbed-compatible response, so it can be integrated by any other services that already use oEmbed in some form or fashion.</p>

<p>I built <a href="https://noembed.preslav.me/">NoEmbed</a> in my spare time writing 100% Go code. It is still crude and unfinished, but already working, and with your help and feedback, I might be able to turn it into a real service.</p>

<h1 id="faq">FAQ</h1>

<h2 id="aren-t-there-other-services-doing-this-already">Aren&rsquo;t there other services doing this already?</h2>

<p>Of course, there are. <a href="https://embed.ly/">Embed.ly</a> is a great example (used by Medium). Other notable examples are <a href="https://iframely.com/">Iframely</a>, <a href="https://microlink.io/">microlink.io</a>, and <a href="https://embed.rocks/try">Embed.rocks</a>. All of them are great services, of course, but I wanted to one first and foremost for myself; one that is lean and fast and also respects the privacy of its users.</p>

<h2 id="what-s-with-the-name">What&rsquo;s with the name?</h2>

<p>This is just a temporary name. NoEmbed is actually the name of a <a href="https://noembed.com/">famous oEmbed proxy</a>, which I wanted to use in the very begging. Yet, the small number of available oEmbed provides was a crucial factor that led me not to.</p>

<p>That said, the name will most probably change, and I am open to hear your suggestions.</p>

<h2 id="what-is-the-tech-stack">What is the tech stack?</h2>

<p>Pretty boring, actually. Nothing super fancy. At the moment, we are talking about a single tailor-made Web/API service written in pure Go, sitting behind nginx (doing the load-balancing and some heavy caching).</p>

<h2 id="who-is-using-it">Who is using it?</h2>

<p>At the moment, the primary integrator of NoEmbed is the site you are reading at the moment. The embed that you saw at the beginning of this page, was generated with it.</p>

<h2 id="are-you-planning-on-turning-this-into-an-actual-product">Are you planning on turning this into an actual product?</h2>

<p>If you think you are ready to pay me for it, absolutely! If you already have a matching use case, do let me know, or sign up right away. I am planning to release a future update, which will allow consumers to use the API using secure tokens and authentication.</p>
]]></content>
        </item>
        
    </channel>
</rss>
