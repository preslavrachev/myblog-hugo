<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Podcasting on Random Bits of Wisdom</title>
        <link>https://preslav.me/tags/podcasting/</link>
        <description>Recent content in Podcasting on Random Bits of Wisdom</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 10 Oct 2019 22:00:00 +0000</lastBuildDate>
        <atom:link href="https://preslav.me/tags/podcasting/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>What&#39;s New in Mixtape</title>
            <link>https://preslav.me/2019/10/10/what-is-new-in-mixtape/</link>
            <pubDate>Thu, 10 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/10/what-is-new-in-mixtape/</guid>
            <description>Give me more like these&amp;hellip; Search engines are a great tool for content discovery beyond the simple text searching. Often, it is difficult to express exactly what we are looking for. This may be due to limitations of the interface, or our own struggle to explain it in enough detail. There is one thing, however, which we are fairly good at. Given two things, we can easily say which one we like more than the other.</description>
            <content type="html"><![CDATA[

<h2 id="give-me-more-like-these">Give me more like these&hellip;</h2>

<p>Search engines are a great tool for content discovery beyond the simple text searching. Often, it is difficult to express exactly what we are looking for. This may be due to limitations of the interface, or our own struggle to explain it in enough detail. There is one thing, however, which we are fairly good at. Given two things, we can easily say which one we like more than the other.</p>

<p>With the most recent update on <a href="https://mixtape.preslav.me/">Mixtape</a>, I have added the ability to use Mixtape as a way to discover new podcast episodes, by simply providing the IDs of ones that might be of interest to you. Those who have worked with search engines before, probably know that this is something that this type of applications are fairly well-suited, but not often used for. In particular, ElasticSearch (the brain behind the whole search operation) has a particular type of search query, which allows for just that.</p>








<div class="embed"
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%; margin-bottom: 1rem">

  
  <div class="embed-image"
    style="flex:1; background: url(https://www.elastic.co/static/images/elastic-logo-200.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        More like this query | Elasticsearch Reference [7.4]</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      The More Like This Query finds documents that are &#34;like&#34; a given
set of documents. In order to do so, MLT selects a set of representative terms
of these input documents, forms a query using these terms, executes the query
and returns the results. The user controls the input documents, how the terms
should be selected and how the query is formed.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html">https://www.elastic.co | </a></div>
      <div style="float: right">Created with <a
          href="https://linqable.pro/">Linqable</a></div>
    </div>
  </div>
</div>

<h2 id="next-steps">Next steps</h2>

<p>Currently, this is still an API-only feature, but it will open up the door for applications of various sorts. One particular thing I am working on, is in the form of a chat bot application, which one will be able to send podcast episode links to (e.g. from <a href="https://overcast.fm/">Overcast</a>, <a href="https://www.pocketcasts.com/">Pocket Casts</a>, <a href="https://www.apple.com/itunes/">Apple Podcasts</a>, etc) and get related podcast episodes to keep listening to.</p>

<p>Stay tuned!</p>
]]></content>
        </item>
        
        <item>
            <title></title>
            <link>https://preslav.me/microblog/260920191020/</link>
            <pubDate>Thu, 26 Sep 2019 10:20:00 +0000</pubDate>
            
            <guid>https://preslav.me/microblog/260920191020/</guid>
            <description>Despite being a video-focused platform, people are increasingly coming to YouTube to look for podcasts. A recent survey of Canadian adults found that 43 percent of people “went to YouTube for podcasts in the past year.” That put YouTube ahead of Apple Podcasts (34 percent) and Spotify (23 percent).
Some of the top podcasts on YouTube are pulling in millions of views every few days or weeks. Top shows, like Ethan and Hila Klein’s H3 Podcast or Joe Rogan’s Joe Rogan Experience, have dedicated audiences who use YouTube notifications as an RSS feed, letting them know when a new episode is available to watch.</description>
            <content type="html"><![CDATA[<blockquote>
<p>Despite being a video-focused platform, people are increasingly coming to YouTube to look for podcasts. A recent <a href="https://medium.com/@CanadianPodcastListener/if-i-watch-listen-to-it-on-youtube-is-it-still-a-podcast-22e64a0129ab">survey of Canadian adults</a> found that 43 percent of people “went to YouTube for podcasts in the past year.” That put YouTube ahead of Apple Podcasts (34 percent) and Spotify (23 percent).</p>

<p>Some of the top podcasts on YouTube are pulling in millions of views every few days or weeks. Top shows, like Ethan and Hila Klein’s <a href="https://www.youtube.com/channel/UCLtREJY21xRfCuEKvdki1Kw">H3 Podcast</a> or <a href="https://www.youtube.com/channel/UCzQUP1qoWDoEbmsQxvdjxgQ">Joe Rogan’s Joe Rogan Experience</a>, have dedicated audiences who use YouTube notifications as an RSS feed, letting them know when a new episode is available to watch. While the podcasts are also distributed via Spotify and Apple Podcasts, YouTube acts as a first stop.</p>
</blockquote>








<div class="embed"
  style="display:flex; flex-wrap: wrap; border: 1px solid #d4d4d4; width:100%; margin-bottom: 1rem">

  
  <div class="embed-image"
    style="flex:1; background: url(https://cdn.vox-cdn.com/thumbor/IR4Vq5BMVQMhbwnHfxT6Jv-TpyM=/0x215:3000x1786/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/19180861/acastro_190821_3603_youtubers_podcasts_0001.png); background-size:cover; background-position:center; min-height: 120px">
  </div>
  

  <div class="embed-content" style="flex:3; padding: 1rem;"><a
      href="https://www.theverge.com/2019/9/9/20801873/youtube-podcast-creators-h3-joe-rogan-ethan-klein-hila-david-dobrik-views">
      <div class="title"
        style="font-weight: 800; margin-bottom: 1rem; font-size:120%">
        YouTube creators are turning the site into a podcast network</div>
    </a>
    <div class="embed-description" style="margin-bottom:1rem; font-size:80%">
      And they’re launching secondary channels to do so.</div>
    <div class="embed-meta" style="font-size:60%">
      <div style="float:left; max-width:80%"><a
          href="https://www.theverge.com/2019/9/9/20801873/youtube-podcast-creators-h3-joe-rogan-ethan-klein-hila-david-dobrik-views">https://www.theverge.com | </a></div>
      <div style="float: right">Created with <a
          href="https://linqable.pro/">Linqable</a></div>
    </div>
  </div>
</div>
]]></content>
        </item>
        
        <item>
            <title>What&#39;s in a Mixtape?</title>
            <link>https://preslav.me/2019/09/25/what-is-in-a-mixtape/</link>
            <pubDate>Wed, 25 Sep 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/09/25/what-is-in-a-mixtape/</guid>
            <description>Mixtape
 A homemade music compilation (usually on cassette or CD-R) that contains all your favourite tracks. Often you give such a compilation to the guy or gal of your fancy in hopes that it will help you win their heart. &amp;ndash; Urban Dictionary A budding search and discovery engine for podcasts built by yours truly.  The 20th century marked a giant leap forward in music production and distribution.</description>
            <content type="html"><![CDATA[

<p><em>Mixtape</em></p>

<ol>
<li><em>A homemade music compilation (usually on cassette or CD-R) that contains all your favourite tracks. Often you give such a compilation to the guy or gal of your fancy in hopes that it will help you win their heart. &ndash; <a href="https://www.urbandictionary.com/define.php?term=Mixtapes">Urban Dictionary</a></em></li>
<li><em>A budding <a href="https://mixtape.preslav.me/">search and discovery engine for podcasts</a> built by yours truly.</em></li>
</ol>

<p>The 20th century marked a giant leap forward in music production and distribution. It started with the vinyl record which made music available in everyone&rsquo;s home. Then, at the turn of the century, the digital cassette recorder came to shake the game, by allowing everyone to create mixes of their own liking.</p>

<p>See, vinyl records are great, but they could only play the same thing over and over again. Assuming you bought one album per record, you quickly ended up holding a pile of records from your favourite bands. We all know that artists back then were great and almost all songs in an album became hits, but what if, hypothetically, one liked only a couple of songs and skipped the rest? One still needed to buy and keep the entire record.</p>

<p>Digital cassette recorders changed all that. Not only were cassettes smaller in size; one could record on top, multiple times over. This gave the birth of the <strong>mixtape</strong>. Decades before the playlists of today, mixtapes let everyone create and share thematic mixes of songs from different artists, and often, from completely different genres.</p>

<h1 id="from-cassettes-to-podcasting">From cassettes to podcasting</h1>

<p>In a funny, but similar way, podcast distribution still works like buying vinyls from a record store. You can subscribe manually, or via any of the myriads of mobile apps out there. Yet, podcasts still get distributed primarily as RSS feeds that you either follow entirely or not at all. Just like with records, if you like the podcast host, over the years you build up a certain sense of loyalty and bonding. I have been listening to podcasts since 2004, and there are are many that I have been following for more than a decade.</p>

<p>Unfortunately, just like music, podcasts nowadays are in the millions. While I still follow my favorites, there are many more, from which I occasionally grab an interesting episode and skip the rest. Kind of like your Twitter timeline. Of the hundreds (or thousands) of people you follow, perhaps, you only interact with a couple. The rest are somewhat matching your taste, but you probably only added them because you like one of their tweets. Now you are stuck with them forever, hoping for them to strike gold again.</p>

<p>This is one of the reasons why I started working on <a href="https://mixtape.preslav.me/">Mixtape</a>. From a rough first glance, <a href="https://mixtape.preslav.me/">Mixtape</a> looks like a search engine. This is totally true - the search engine is what powers the foundation of <a href="https://mixtape.preslav.me/">Mixtape</a>. Unlike what you would get in your podcast player, the search engine goes beyond the podcast itself, and focuses on what makes each of its episodes unique. That&rsquo;s why, you would get episodes from various podcasts when searching for a given topic:</p>

<ul>
<li><a href="https://mixtape.preslav.me/?search=sleep%20science"><em>Why is sleep so important</em></a></li>
<li><a href="https://mixtape.preslav.me/?search=space%20exploration&amp;category=science"><em>What&rsquo;s the up with space exploration?</em></a></li>
<li><a href="https://mixtape.preslav.me/?search=future%20of%20work&amp;category=business"><em>Are we ready for the future of work?</em></a></li>
</ul>

<p>Yet, the search is only the beginning. The <strong>mixtape</strong> part in <a href="https://mixtape.preslav.me/">Mixtape</a> comes from the fact that each search is essentialy a new podcast you can subscribe to. A whole new podcast, made up of episodes from various shows, and centred around the topic that interested you.</p>

<p>And here comes the discovery part. By providing the full credits to the original podcast creator (incl. links, podcast covers, etc), I am hoping that having caught up on a new podcast via a mixtape feed, a listener would eventually go and subscribe for the podcast itself. The difference with subscribing up-front, is that the listener would have gained enough confidence that the podcast is really up to their liking.</p>
]]></content>
        </item>
        
        <item>
            <title>Mixtape Retrospective: Time to Split the Monolith?</title>
            <link>https://preslav.me/2019/08/03/mixtape-retrospective-time-to-split-the-monolith/</link>
            <pubDate>Sat, 03 Aug 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/08/03/mixtape-retrospective-time-to-split-the-monolith/</guid>
            <description>I have recently made my project Mixtape open to the world. Mixtape is a search and discovery platform for podcasts, built exclusively using Go. I decided to use Go primarily because of its compiler&amp;rsquo;s ability to deliver small, self-contained executables with close-to-metal native performance and extremely low memory footprint. It was also a way to battle-test the stack and figure out where and how it will benefit future projects in my portfolio.</description>
            <content type="html"><![CDATA[

<p>I have recently made my project <a href="https://mixtape.preslav.me/">Mixtape</a> open to the world. <a href="https://mixtape.preslav.me/">Mixtape</a> is a search and discovery platform for podcasts, built exclusively using Go. I decided to use Go primarily because of its compiler&rsquo;s ability to deliver small, self-contained executables with close-to-metal native performance and extremely low memory footprint. It was also a way to battle-test the stack and figure out where and how it will benefit future projects in my portfolio.</p>

<p>In the few months running to the initial release, I learned a lot and was confronted by a couple of challenges that other fellow programmers have also been raving about:</p>

<ul>
<li><p>Panics are lurking at every corner. A single panic can kill your entire app. The single (thought not 100% reliable) cure is to handle every error explicitly. This leads to code which is often interrupted by the same three lines:</p>

<pre><code class="language-go">result, err := doSomething()
if err != nil {
// do something with the error, and potentially return or throw a Panic
}
</code></pre></li>

<li><p>Codebases do not scale well. Whether due to the simplistic syntax of the language, data types, or its approach to packaging and encapsulation, there is a certain point, in which either the cost of setting up proper abstractions or that of copying the same piece of code multiple times, ultimately slows down development efforts.</p></li>
</ul>

<h1 id="build-deploy-take-a-step-back">Build, deploy, take a step back</h1>

<p>I had to build a whole app in Go, only to realize that what I initially considered shortcomings, were features in disguise, intentionally put by the design team as protection against bloat. They are a very good indicator of when the time has come to split an application into two or more smaller apps. Some call them micro-services. I tend to think of them as commands, in the UNIX sense of single-purpose apps that do one thing and one thing alone.</p>

<p>When you start thinking this way, you realize that resilience and fault tolerance move away from the responsibilities of the single app/service/command and shift to the orchestration layer. That is not to say that you should not check for errors in your Go apps. On the contrary, check and cover what you can. However, not every error can be, or even, <strong>should be</strong> covered by your app. Some are even out of your control. Especially, when using 3rd-party code. Admit it, services fail and will fail, and that&rsquo;s their natural behavior.</p>

<p>By having the components split from one another at the service level, you allow each one to fail separately, without these causing problems on the rest or bringing the entire system down. With infrastructure tech such as Docker and Kubernetes, restarting a faulty service, or load-balancing between a myriad of service copies has become rather easy.</p>

<h1 id="no-s-t-sherlock">No s**t, Sherlock!</h1>

<p>All of that should have seemed obvious, you say? After, all, Go has been pointed time and again as the programming language of the Cloud (which, TBH, is pure marketing BS, from the same people that called MongoDB &ldquo;web-scale&rdquo; back in the day). Why did I go for a monolith, then? Because, developing a monolith is the most natural way you can start a project, especially when working on it alone. I come from the world of Java, where, assuming you have enough CPU and RAM to sustain it, your app can practically run forever out of a single instance. You can have as many separate threads as your hardware allows for, and each of those may fail, without this necessarily bringing your entire app down. You might end up in deadlocks and resource starvation might cause the app to crash, but this won&rsquo;t happen as often as people imagine.</p>

<p>So, it was our of practicality that I started building <a href="https://mixtape.preslav.me/">Mixtape</a> as a monolith. Now, I am at a crossroads. I have tried to stay away from messing up with infrastructure configuration for as long as I could. However, if I decide to continue with Go, I might have to eventually start splitting the app. Only time will tell.</p>
]]></content>
        </item>
        
        <item>
            <title></title>
            <link>https://preslav.me/microblog/201905100746/</link>
            <pubDate>Fri, 10 May 2019 05:46:31 +0000</pubDate>
            
            <guid>https://preslav.me/microblog/201905100746/</guid>
            <description>Google will soon introduce searching for podcast episodes as part of its search results. This much was said during the keynote of this year&amp;rsquo;s Google I/O. At first, I thought that this might put down my efforts to build a podcast search engine myself, but then i thought it through. The fact that Google recognizes the importance of podcasts is not only not a motivation killer, but also a serious reassurance about their importance.</description>
            <content type="html"><![CDATA[<p>Google will <a href="https://techcrunch.com/2019/05/07/google-search-will-offer-better-news-coverage-and-soon-support-for-podcast-search/">soon introduce searching for podcast episodes</a> as part of its search results. This much was said during the keynote of this year&rsquo;s <a href="https://events.google.com/io/">Google I/O</a>. At first, I thought that this might put down my efforts to build a podcast search engine myself, but then i thought it through. The fact that Google recognizes the importance of podcasts is not only not a motivation killer, but also a serious reassurance about their importance.</p>

<p>You can check how your podcast will look among Google&rsquo;s search results: <a href="https://search.google.com/devtools/podcast/preview">Podcast Preview</a></p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/lyRPyRKHO8M?start=305" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
]]></content>
        </item>
        
    </channel>
</rss>
