<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Qa on Random Bits of Wisdom</title>
        <link>https://preslav.me/tags/qa/</link>
        <description>Recent content in Qa on Random Bits of Wisdom</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 31 Oct 2019 22:00:00 +0000</lastBuildDate>
        <atom:link href="https://preslav.me/tags/qa/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Q/A: Why Does an iPhone Need Less Memory Than an Android Phone?</title>
            <link>https://preslav.me/2019/10/31/iphone-less-memory-android/</link>
            <pubDate>Thu, 31 Oct 2019 22:00:00 +0000</pubDate>
            
            <guid>https://preslav.me/2019/10/31/iphone-less-memory-android/</guid>
            <description>Note: Unlike my usual posts, this is a very basic, non-technical explanation. A friend asked me this question, and I thought I might share the answer here. You can use it on your next cocktail party üçª
It mainly boils down to how memory garbage gets collected on each platform. iOS applications rely on an approach called Automatic Reference Counting (ARC). Every piece of memory that gets assigned some value gets tracked and released, as soon as the number of its accessors reaches zero.</description>
            <content type="html"><![CDATA[<p><strong>Note:</strong> <em>Unlike my usual posts, this is a very basic, non-technical explanation. A friend asked me this question, and I thought I might share the answer here. You can use it on your next cocktail party üçª</em></p>

<hr />

<p>It mainly boils down to how memory garbage gets collected on each platform. iOS applications rely on an approach called <a href="https://en.wikipedia.org/wiki/Automatic_Reference_Counting">Automatic Reference Counting (ARC)</a>. Every piece of memory that gets assigned some value gets tracked and released, as soon as the number of its accessors reaches zero.</p>

<p>Android on the other hand, uses a mark-and-sweep garbage collector, known from the <a href="https://en.wikipedia.org/wiki/Java_virtual_machine?wprov=sfti1">Java virtual machine (JVM)</a>. It won‚Äôt clean up memory right away, but will occasionally free big chunks of it in one big pass (also known as stop-the-world). This approach assumes that there is a lot of memory available on the device so that these stop-the-world cleanups occur less frequently.</p>

<p>Both approaches have their advantages and disadvantages.</p>
]]></content>
        </item>
        
    </channel>
</rss>
