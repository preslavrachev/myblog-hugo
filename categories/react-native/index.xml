<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Native on Preslav Rachev</title>
    <link>https://preslav.me/categories/react-native/</link>
    <description>Recent content in React Native on Preslav Rachev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Mar 2017 05:25:00 +0000</lastBuildDate>
    
	<atom:link href="https://preslav.me/categories/react-native/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debugging Network Calls in React Native Using the Chrome Debugger</title>
      <link>https://preslav.me/2017/03/26/debugging-network-calls-in-react-native-using-the-chrome-debugger/</link>
      <pubDate>Sun, 26 Mar 2017 05:25:00 +0000</pubDate>
      
      <guid>https://preslav.me/2017/03/26/debugging-network-calls-in-react-native-using-the-chrome-debugger/</guid>
      <description>TL;DR! Just give me the code In your index.js file (or your platform-specific index file for that matter), simply add the following line to the top, directly after the import statements:
XMLHttpRequest = GLOBAL.originalXMLHttpRequest ? GLOBAL.originalXMLHttpRequest : GLOBAL.XMLHttpRequest;  You will also need a Chrome plugin that overrides CORS. I use CORS Toggle. You may also decide to skip the plugin and start Chrome with CORS disabled:
chrome --disable-web-security then, as usually, start remote debugging from your app, and open: http://localhost:8081/debugger-ui on your computer.</description>
    </item>
    
  </channel>
</rss>